/**
 * Title: Sign-in guard.ts
 * Author: Devan Wong
 * Date: 16 January 2021
 * Description: This was generated from CLU n g g sign-in to create a CanActivate guard
 */

//Imported [autogenerated] from command CLI n g g sign-in
import { Injectable } from '@angular/core';
import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';
import { Observable } from 'rxjs';
// Importing routes from the angular routes e
import { Router } from '@angular/router';
//Imported [autogenerated] from command CLI n g g sign-in
@Injectable({
  providedIn: 'root'
})
//Imported [autogenerated] from command CLI n g g sign-in
export class SignInGuard implements CanActivate {
  // Added the imported Router to the constructor.
    // Constructor will look at the value pass over from the query params
  constructor (private router: Router) { }
  canActivate(
    next: ActivatedRouteSnapshot,
    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {

   // Added the variable isLoggedin and getting it the queryparams function. "next", is getting pulled from the parameters above.
   let isLoggedIn = next.queryParams.isLoggedIn;
   if (isLoggedIn){
     return true;
   } else {
    //  This.router is connected to the constructor above
     this.router.navigate(['/']);
     return false;
   }
  }

}
